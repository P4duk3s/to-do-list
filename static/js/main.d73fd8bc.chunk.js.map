{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","onChangeValue","e","setState","value","target","onAddItem","state","list","onRemoveItem","i","filter","item","j","className","type","placeholder","onChange","this","onClick","disabled","length","map","index","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA8EeA,E,kDA1Eb,aAAe,IAAD,8BACZ,gBAQFC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOD,SAVnB,EAadE,UAAY,WACV,EAAKH,UAAS,SAAAI,GAEZ,MAAO,CACLH,MAAO,GACPI,KAHQ,CAAID,EAAMH,OAAV,mBAAoBG,EAAMC,YAf1B,EAuBdC,aAAe,SAAAC,GACb,EAAKP,UAAS,SAAAI,GAGZ,MAAO,CACLC,KAHWD,EAAMC,KAAKG,QAAO,SAACC,EAAMC,GAAP,OAAaH,IAAMG,UAtBpD,EAAKN,MAAQ,CACXH,MAAO,GACPI,KAAM,IALI,E,0CAiCd,WAAU,IAAD,OACP,OACE,gCACE,oBAAIM,UAAU,YAAd,wBACA,sBAAKA,UAAU,YAAf,UACA,uBACEC,KAAK,OACLC,YAAY,kBACZC,SAAUC,KAAKjB,cACfG,MAAOc,KAAKX,MAAMH,QAGpB,wBACEU,UAAU,UACVC,KAAK,SACLI,QAASD,KAAKZ,UACdc,UAAWF,KAAKX,MAAMH,MAAMiB,OAJ9B,eAQA,6BACGH,KAAKX,MAAMC,KAAKc,KAAI,SAACV,EAAMW,GAC1B,OACE,+BACcX,EACd,wBACEE,UAAU,MACVK,QAAS,kBAAM,EAAKV,aAAac,IAFnC,iBADOX,kB,GA1DHY,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d73fd8bc.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '', \n      list: []\n    };\n  }\n\n  onChangeValue = e => {\n    this.setState({value: e.target.value});\n  };\n\n  onAddItem = () => {\n    this.setState(state => {\n      const list = [state.value, ...state.list]\n      return {\n        value: '',\n        list\n      };\n    });\n  };\n\n  onRemoveItem = i => {\n    this.setState(state => {\n      const list = state.list.filter((item, j) => i !== j);\n \n      return {\n        list,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"app-title\">TO DO LIST</h1>\n        <div className=\"container\">\n        <input\n          type=\"text\"\n          placeholder=\"Give me a task!\"\n          onChange={this.onChangeValue} \n          value={this.state.value}\n        >\n        </input>\n        <button\n          className=\"add-btn\"\n          type=\"button\"\n          onClick={this.onAddItem}\n          disabled={!this.state.value.length}\n        >\n          +\n        </button>\n        <ul>\n          {this.state.list.map((item, index) => {\n            return(\n              <li \n                key={item}>{item}\n              <button\n                className=\"btn\"\n                onClick={() => this.onRemoveItem(index)}\n              >X</button></li>\n            )\n          })}\n        </ul>\n      </div>\n      </div>\n      \n      \n        \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}